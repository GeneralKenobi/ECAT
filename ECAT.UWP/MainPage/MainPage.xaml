<Page
    x:Class="ECAT.UWP.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ECAT.UWP"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:controls="using:UWPEnhanced.Controls"
	xmlns:xaml="using:UWPEnhanced.Xaml"
	xmlns:converters="using:UWPEnhanced.ValueConverters"
    mc:Ignorable="d"
    Background="{StaticResource WhiteBrush}"
	Name="RootPage">

	<Page.Resources>
		<local:IBaseComponentToComponentViewModelConverter x:Key="ComponentConverter"/>
		<local:IWireToWireViewModelConverter x:Key="WireConverter"/>
		<converters:NegateImaginaryComplexConverter x:Key="PositionConverter"/>
	</Page.Resources>


	<xaml:VisualAttachments.AttachedVisuals>
		<xaml:KeyVisualCommand Command="{Binding ProcessKeyPressCommand}">
			<xaml:VisualKeyTrigger BlacklistModifierKeys="True"/>
		</xaml:KeyVisualCommand>
	</xaml:VisualAttachments.AttachedVisuals>

	<Grid>

		<ScrollViewer Name="ScrollViewerControl"
		ZoomMode="Enabled" MinZoomFactor="0.1" MaxZoomFactor="10"			
			HorizontalScrollMode="Enabled" HorizontalScrollBarVisibility="Auto"
			HorizontalAlignment="Left"
			VerticalAlignment="Top">

			<!--<Grid Tapped="DesignAreaTapped">-->
			<Grid>

				<xaml:VisualAttachments.AttachedVisuals>
					<xaml:TappedPointerPositionVisualCommand Command="{Binding DesignVM.DesignAreaClickedCommand}"
						Converter="{StaticResource PositionConverter}">
						<xaml:VisualTappedTrigger/>
					</xaml:TappedPointerPositionVisualCommand>
				</xaml:VisualAttachments.AttachedVisuals>

				<Grid x:Name="BackgroundGrid"
					Background="Transparent"
					UseLayoutRounding="False"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"/>

				<!--DragOver="PartDragOver"
				Drop="DropOnMainCanvas"
				Tapped="MainCanvasTapped"-->

				<!-- Control for wires-->
				<ItemsControl ItemsSource="{Binding DesignVM.DesignManager.CurrentSchematic.Wires}"
					UseLayoutRounding="False">

					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<Canvas />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>

					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<local:WireTC DataContext="{Binding Converter={StaticResource WireConverter}}"/>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>

				<!-- Control for components -->
				<!-- Don't use layout rounding because it blurs the parts when they're rotated,
				especially noticeable when the control has text in it -->
				<ItemsControl ItemsSource="{Binding DesignVM.DesignManager.CurrentSchematic.Components}"
					UseLayoutRounding="False">

					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<Canvas />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>

					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<local:ComponentWrapperTC DataContext="{Binding Converter={StaticResource ComponentConverter}}"/>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>



			</Grid>
		</ScrollViewer>

		<!-- Elements at the bottom of the screen: The dark blue border, the currently logged message, the component info -->
		<StackPanel 
			HorizontalAlignment="Stretch"
			VerticalAlignment="Bottom">

			<local:ComponentInfoUC HorizontalAlignment="Right"
				DataContext="{Binding DesignVM.ComponentInfoProvider.Value}"
				Visibility="{Binding ElementName=RootPage, Path=DataContext.DesignVM.ComponentInfoProvider.CanBeHidden, Converter={converters:BoolToVisibilityMEC InvertConvesion=True}}"/>

			<!-- The dark blue border at the bottom of the screen with the currently logged message -->
			<Border Background="{StaticResource DarkBlue5Brush}"
				Padding="50 0 0 0"
				Height="30">

				<!-- The currently logged message -->
				<TextBlock Text="{Binding DesignVM.InfoLogger.Message}"
				FontSize="{StaticResource FontSizeSmall}"
				Foreground="{StaticResource LightGrayBrush}"
				VerticalAlignment="Center">

				<!-- Translate transform which adjusts the position of the message depending on if menu is open/closed -->
					<TextBlock.RenderTransform>
						<TranslateTransform x:Name="LogMessageTranslateTransform"/>
					</TextBlock.RenderTransform>

				<xaml:VisualManager.VisualSetups>
					<xaml:VisualSetupGroup>

						<xaml:VisualSetupGroup.Triggers>
							<xaml:VisualTransitionCollection>

								<!-- Transitions to LogMessageDisplaced when menu is openend -->
								<xaml:VisualTransition TransitionTo="LogMessageDisplaced">
									<xaml:VisualDataTriggerBool Data="{Binding ElementName=SideMenu, Path=IsOpen}"
										CompareTo="True"/>
								</xaml:VisualTransition>

								<!-- Transitions out of the current setup when menu is closed -->
								<xaml:VisualTransition>
									<xaml:VisualDataTriggerBool Data="{Binding ElementName=SideMenu, Path=IsOpen}"
										CompareTo="False"/>				
								</xaml:VisualTransition>

							</xaml:VisualTransitionCollection>
						</xaml:VisualSetupGroup.Triggers>

						<!-- Moves the textblock to the right so that it's not obstructed be the menu -->
						<xaml:VisualSetupDynamic ID="LogMessageDisplaced">
							<xaml:VisualSetupDynamic.TransitionInStoryboard>
								<Storyboard>
									<DoubleAnimation Storyboard.TargetName="LogMessageTranslateTransform"
										Storyboard.TargetProperty="X"
										To="200"
										Duration="0:0:0.25">
									
										<DoubleAnimation.EasingFunction>
											<CubicEase EasingMode="EaseInOut"/>
										</DoubleAnimation.EasingFunction>

									</DoubleAnimation>
								</Storyboard>
							</xaml:VisualSetupDynamic.TransitionInStoryboard>

							<!-- Moves the menu back -->
							<xaml:VisualSetupDynamic.TransitionOutStoryboard>
								<Storyboard>
									<DoubleAnimation Storyboard.TargetName="LogMessageTranslateTransform"
										Storyboard.TargetProperty="X"
										To="0"
										Duration="0:0:0.25">
										
										<DoubleAnimation.EasingFunction>
											<CubicEase EasingMode="EaseInOut"/>
										</DoubleAnimation.EasingFunction>

									</DoubleAnimation>
								</Storyboard>
							</xaml:VisualSetupDynamic.TransitionOutStoryboard>

						</xaml:VisualSetupDynamic>

					</xaml:VisualSetupGroup>
				</xaml:VisualManager.VisualSetups>

				</TextBlock>

			</Border>

		</StackPanel>

		<controls:Menu x:Name="SideMenu"
			Position="Left"
			EnableMenuReposition="False"
			Background="{StaticResource DarkBlueBrush}"
			BorderBrush="{StaticResource BlackBrush}"			
			SeparatorBrush="{StaticResource BlackBrush}"
			SeparatorThickness="1"
			Foreground="{StaticResource WhiteBrush}"
			FontSize="22"
			IconsPanelLength="40"
			IconsPanelPadding="3 10"
			IconsSpacing="20"
			Padding="5"
			ContentLength="200">
			<controls:Menu.Content>

				<!--Menu allowing the user to add parts-->
				<local:ComponentAddingMenuUC controls:Menu.Glyph="&#xE710;"/>

				<!--Edit menu control-->
				<local:ComponentEditMenuUC controls:Menu.Glyph="&#xE104;"
					DataContext="{Binding DesignVM.ComponentEditSectionVM}"/>
				<!--<local:EditMenu controls:Menu.Glyph="&#xE104;"/>-->

			</controls:Menu.Content>

		</controls:Menu>

	</Grid>
</Page>