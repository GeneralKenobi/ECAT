<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ECAT.UWP"
	xmlns:xaml="using:UWPEnhanced.Xaml"
	xmlns:converters="using:UWPEnhanced.ValueConverters">


	<Style TargetType="local:WireSocketTC">
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:WireSocketTC">
					<Border>

						<Border.Resources>
							<converters:OppositeDoubleConverter x:Key="Opposite"/>
							<converters:ProductConverter x:Key="Product"/>
							<converters:QuotientConverter x:Key="Quotient"/>
						</Border.Resources>

						<!-- Offset that places the socket (left, top corner) on the assigned position -->
						<Border.RenderTransform>
							<TranslateTransform	X="{Binding Position.X, RelativeSource={RelativeSource Mode=TemplatedParent}}"
									Y="{Binding Position.Y, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource Opposite}}"/>
						</Border.RenderTransform>

						<!-- Transparent hitbox that will catch all tapped events that technically still belong to this socket
						(a polyline with stroke thickness 25) and surpress them from being bubbled up (eg. to design area) which
						could, for example, allow the user to place a wire on the socket without invoking proper commands 
						related to the socket -->
						<Border Background="Transparent"
							Width="{Binding HitboxLength}"
							Height="{Binding HitboxLength}">

							<!-- Offset that centralizes the socket around its assigned position -->
							<Border.RenderTransform>
								<TranslateTransform X="{Binding HitboxLength, Converter={StaticResource Quotient}, ConverterParameter=-2}"
								Y="{Binding HitboxLength, Converter={StaticResource Quotient}, ConverterParameter=-2}"/>
							</Border.RenderTransform>

							<!-- Attach a trigger that will catch and surpress tapped event from being propagated -->
							<xaml:VisualAttachments.AttachedVisuals>
								<xaml:VisualTappedTrigger SetHandled="True"/>
							</xaml:VisualAttachments.AttachedVisuals>

							<!-- Visible part of the socket -->
							<Ellipse Fill="{StaticResource BlackBrush}"
								Width="{Binding Wire.WireSocketRadius, Converter={StaticResource Product}, ConverterParameter=2}"
								Height="{Binding Wire.WireSocketRadius, Converter={StaticResource Product}, ConverterParameter=2}">

								<!-- Wire socket clicked command -->
								<xaml:VisualAttachments.AttachedVisuals>
									<xaml:TappedTriggerCommand Command="{Binding WireSocketClickedCommand}"			
										CommandParameter="{Binding PositionOnWire, RelativeSource={RelativeSource Mode=TemplatedParent}}"
										SetHandled="True"/>
								</xaml:VisualAttachments.AttachedVisuals>

							</Ellipse>

						</Border>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
